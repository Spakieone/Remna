#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
GRAY='\033[0;37m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å –≤–æ–ª–Ω–∞–º–∏
show_header() {
    clear
    echo -e "${BOLD}${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}                                                              ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ${NC}                ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó${NC}                ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë${NC}                ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë${NC}                ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë${NC}                ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù${NC}                ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}                                                              ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}            ${GRAY}Management Suite by Spakieone${NC}                   ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}                                                              ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_main_menu() {
    show_header
    
    # –ú–µ–Ω—é —Å –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º
    echo -e "${BOLD}${WHITE}‚îå‚îÄ üõ†Ô∏è  –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}                                                      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}1.${NC} ${YELLOW}üß© Remnawave Panel${NC}     ${GRAY}‚îÉ${NC} ${WHITE}–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}       ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}2.${NC} ${YELLOW}üñ•Ô∏è RemnaNode Core${NC}      ${GRAY}‚îÉ${NC} ${WHITE}–£–∑–ª—ã –∏ —Å–µ—Ä–≤–∏—Å—ã${NC}          ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}3.${NC} ${YELLOW}üõ°Ô∏è Reality Caddy${NC}       ${GRAY}‚îÉ${NC} ${WHITE}–ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞${NC}      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}4.${NC} ${YELLOW}üöÄ Network Tools${NC}       ${GRAY}‚îÉ${NC} ${WHITE}–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Ç–∏${NC}        ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}5.${NC} ${YELLOW}üìà Node Exporter${NC}       ${GRAY}‚îÉ${NC} ${WHITE}–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã${NC}      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}6.${NC} ${YELLOW}üìä System Status${NC}       ${GRAY}‚îÉ${NC} ${WHITE}–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è${NC}    ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}                                                      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo ""
    echo -e "${BOLD}${WHITE}‚îå‚îÄ  –í–´–•–û–î ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}0.${NC} ${WHITE}–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã${NC}                                ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo ""
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:${NC} "
    echo -n "   ‚û§ "
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
call_script() {
    local script_name=$1
    shift  # –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç (–∏–º—è —Å–∫—Ä–∏–ø—Ç–∞), –æ—Å—Ç–∞–ª—å–Ω—ã–µ - –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    local script_path="./$script_name"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏
    if [ -f "$script_path" ]; then
        echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ $script_name...${NC}"
        echo ""
        bash "$script_path" "$@"
        echo ""
        echo -e "${GREEN}–°–∫—Ä–∏–ø—Ç $script_name –∑–∞–≤–µ—Ä—à–µ–Ω.${NC}"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
    elif [ -f "script/scripts-main/$script_name" ]; then
        echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ $script_name...${NC}"
        echo ""
        bash "script/scripts-main/$script_name" "$@"
        echo ""
        echo -e "${GREEN}–°–∫—Ä–∏–ø—Ç $script_name –∑–∞–≤–µ—Ä—à–µ–Ω.${NC}"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
    else
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ, —Å–∫–∞—á–∏–≤–∞–µ–º —Å GitHub
        echo -e "${YELLOW}–°–∫–∞—á–∏–≤–∞–µ–º $script_name —Å GitHub...${NC}"
        local github_url="https://raw.githubusercontent.com/Spakieone/Remna/main/$script_name"
        
        echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ $script_name...${NC}"
        echo ""
        # –°–∫–∞—á–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        local temp_script="/tmp/$script_name"
        curl -s "$github_url" -o "$temp_script"
        chmod +x "$temp_script"
        bash "$temp_script" "$@"
        rm -f "$temp_script"
        echo ""
        echo -e "${GREEN}–°–∫—Ä–∏–ø—Ç $script_name –∑–∞–≤–µ—Ä—à–µ–Ω.${NC}"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
show_system_status() {
    show_header
    echo -e "${BOLD}${WHITE}üìä –î–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã${NC}"
    echo -e "${GRAY}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    echo -e "${WHITE}üê≥ Docker:${NC}"
    if systemctl is-active --quiet docker; then
        echo -e "   ${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å: –ó–∞–ø—É—â–µ–Ω${NC}"
        local docker_version=$(docker --version 2>/dev/null | cut -d' ' -f3 | cut -d',' -f1 || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        echo -e "   ${GRAY}üì¶ –í–µ—Ä—Å–∏—è: $docker_version${NC}"
    else
        echo -e "   ${RED}‚ùå –°—Ç–∞—Ç—É—Å: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    echo -e "${WHITE}üîß Docker Compose:${NC}"
    if command -v docker-compose &> /dev/null || command -v docker compose &> /dev/null; then
        echo -e "   ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "   ${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    
    echo ""
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
    echo -e "${WHITE}üíæ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:${NC}"
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
    local disk_usage=$(df -h / | tail -1 | awk '{print $5}' | sed 's/%//')
    local disk_used=$(df -h / | tail -1 | awk '{print $3}')
    local disk_total=$(df -h / | tail -1 | awk '{print $2}')
    echo -e "   ${CYAN}üíø –î–∏—Å–∫:${NC} $disk_used / $disk_total (${disk_usage}%)"
    
    # –ü–∞–º—è—Ç—å
    local mem_info=$(free -h | grep Mem)
    local mem_used=$(echo $mem_info | awk '{print $3}')
    local mem_total=$(echo $mem_info | awk '{print $2}')
    local mem_percent=$(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100.0}')
    echo -e "   ${CYAN}üß† –ü–∞–º—è—Ç—å:${NC} $mem_used / $mem_total (${mem_percent}%)"
    
    # CPU
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | awk -F'%' '{print $1}')
    echo -e "   ${CYAN}‚ö° CPU:${NC} ${cpu_usage}% –∑–∞–≥—Ä—É–∑–∫–∞"
    
    echo ""
    
    # –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã
    echo -e "${WHITE}üåê –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã Remna:${NC}"
    local ports=$(netstat -tlnp 2>/dev/null | grep -E ':(3000|3010|8080|9443|9050|9051|5002|9100)' | head -5)
    if [ -n "$ports" ]; then
        echo "$ports" | while read line; do
            local port=$(echo $line | awk '{print $4}' | cut -d':' -f2)
            local service=$(echo $line | awk '{print $7}' | cut -d'/' -f2)
            echo -e "   ${GREEN}üîå –ü–æ—Ä—Ç $port:${NC} $service"
        done
    else
        echo -e "   ${GRAY}üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤ Remna${NC}"
    fi
    
    echo ""
    
    # –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
    echo -e "${WHITE}‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:${NC}"
    local uptime_info=$(uptime | sed 's/.*up //' | sed 's/,.*//')
    echo -e "   ${GRAY}üïê –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: $uptime_info${NC}"
    
    echo ""
    echo -e "${GRAY}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
    show_main_menu
    read -r choice
    
    case $choice in
        1) 
            echo -e "${CYAN}üß© –ó–∞–ø—É—Å–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Remnawave...${NC}"
            call_script "remnawave.sh" 
            ;;
        2) 
            echo -e "${YELLOW}üñ•Ô∏è  –ó–∞–ø—É—Å–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è RemnaNode...${NC}"
            call_script "remnanode.sh" 
            ;;
        3) 
            echo -e "${PURPLE}üõ°Ô∏è  –ó–∞–ø—É—Å–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ Reality Caddy...${NC}"
            call_script "selfsteal.sh" 
            ;;
        4) 
            echo -e "${BLUE}üåê –ó–∞–ø—É—Å–∫ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...${NC}"
            call_script "wtm.sh" 
            ;;
        5) 
            echo -e "${GREEN}üìà –ó–∞–ø—É—Å–∫ Node Exporter...${NC}"
            call_script "install_node_exporter.sh" "menu"
            ;;
        6) 
            echo -e "${CYAN}üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã...${NC}"
            show_system_status 
            ;;
        0) 
            echo ""
            echo -e "${BOLD}${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Remna Management Suite!${NC}"
            echo -e "${GRAY}   –£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—è! üöÄ${NC}"
            echo ""
            exit 0
            ;;
        *) 
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 0 –¥–æ 6.${NC}"
            sleep 2
            ;;
    esac
done
