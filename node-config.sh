#!/usr/bin/env bash
# Node Configuration Script
# Version: 1.0.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
GRAY='\033[0;37m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ UFW
check_ufw_status() {
    if ! command -v ufw >/dev/null 2>&1; then
        echo -e "${GRAY}‚ùå UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        return 1
    fi
    
    if ufw status | grep -q "Status: active"; then
        echo -e "${GREEN}‚úÖ –ê–∫—Ç–∏–≤–µ–Ω${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ–∞–∫—Ç–∏–≤–µ–Ω${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ IPv6
check_ipv6_status() {
    local ipv6_disabled=false
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º /etc/sysctl.conf
    if [ -f "/etc/sysctl.conf" ] && grep -q "net.ipv6.conf.all.disable_ipv6 = 1" "/etc/sysctl.conf"; then
        ipv6_disabled=true
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º /etc/sysctl.d/99-sysctl.conf
    if [ -f "/etc/sysctl.d/99-sysctl.conf" ] && grep -q "net.ipv6.conf.all.disable_ipv6 = 1" "/etc/sysctl.d/99-sysctl.conf"; then
        ipv6_disabled=true
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if [ "$(cat /proc/sys/net/ipv6/conf/all/disable_ipv6 2>/dev/null || echo "0")" = "1" ]; then
        ipv6_disabled=true
    fi
    
    if [ "$ipv6_disabled" = true ]; then
        echo -e "${GREEN}‚úÖ –û—Ç–∫–ª—é—á–µ–Ω${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –í–∫–ª—é—á–µ–Ω${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —à–∞–ø–∫–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏
show_status_header() {
    clear
    echo -e "${WHITE}‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–¥—ã${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 50))${NC}"
    echo
    
    # –°—Ç–∞—Ç—É—Å UFW
    echo -e "${WHITE}üõ°Ô∏è  –°—Ç–∞—Ç—É—Å UFW:${NC} $(check_ufw_status)"
    
    # –°—Ç–∞—Ç—É—Å IPv6
    echo -e "${WHITE}üåê –°—Ç–∞—Ç—É—Å IPv6:${NC} $(check_ipv6_status)"
    
    echo
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 50))${NC}"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è IPv6
disable_ipv6() {
    echo -e "${WHITE}üåê –û—Ç–∫–ª—é—á–µ–Ω–∏–µ IPv6${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω –ª–∏ —É–∂–µ
    if check_ipv6_status >/dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  IPv6 —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω${NC}"
        return 0
    fi
    
    echo -e "${BLUE}üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ IPv6...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ /etc/sysctl.d/
    cat > /etc/sysctl.d/99-disable-ipv6.conf << EOF
# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ IPv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
EOF
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    sysctl -p /etc/sysctl.d/99-disable-ipv6.conf
    
    echo -e "${GREEN}‚úÖ IPv6 —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω${NC}"
    echo -e "${GRAY}   –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è IPv6
enable_ipv6() {
    echo -e "${WHITE}üåê –í–∫–ª—é—á–µ–Ω–∏–µ IPv6${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–∫–ª—é—á–µ–Ω –ª–∏ —É–∂–µ
    if ! check_ipv6_status >/dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  IPv6 —É–∂–µ –≤–∫–ª—é—á–µ–Ω${NC}"
        return 0
    fi
    
    echo -e "${BLUE}üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∫–ª—é—á–µ–Ω–∏–µ IPv6...${NC}"
    
    # –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ—Ç–∫–ª—é—á–µ–Ω–∏—è
    rm -f /etc/sysctl.d/99-disable-ipv6.conf
    
    # –£–¥–∞–ª—è–µ–º –∏–∑ /etc/sysctl.conf –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -f "/etc/sysctl.conf" ]; then
        sed -i '/net\.ipv6\.conf\.all\.disable_ipv6/d' /etc/sysctl.conf
        sed -i '/net\.ipv6\.conf\.default\.disable_ipv6/d' /etc/sysctl.conf
        sed -i '/net\.ipv6\.conf\.lo\.disable_ipv6/d' /etc/sysctl.conf
    fi
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    sysctl -w net.ipv6.conf.all.disable_ipv6=0
    sysctl -w net.ipv6.conf.default.disable_ipv6=0
    sysctl -w net.ipv6.conf.lo.disable_ipv6=0
    
    echo -e "${GREEN}‚úÖ IPv6 —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω${NC}"
    echo -e "${GRAY}   –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è UFW
manage_ufw() {
    echo -e "${WHITE}üî• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ UFW${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    if ! command -v ufw >/dev/null 2>&1; then
        echo -e "${RED}‚ùå UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        echo -e "${GRAY}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ UFW: sudo apt install ufw${NC}"
        return 1
    fi
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "   ${WHITE}1)${NC} üî• –í–∫–ª—é—á–∏—Ç—å UFW"
    echo -e "   ${WHITE}2)${NC} ‚ùå –í—ã–∫–ª—é—á–∏—Ç—å UFW"
    echo -e "   ${WHITE}3)${NC} üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å UFW"
    echo -e "   ${WHITE}4)${NC} üåê –û—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç—ã –¥–ª—è IP"
    echo -e "   ${WHITE}5)${NC} üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø–æ –ø–æ—Ä—Ç–∞–º"
    echo -e "   ${WHITE}6)${NC} üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ UFW"
    echo -e "   ${WHITE}0)${NC} ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥"
    echo
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [0-6]: " ufw_choice
    
    case "$ufw_choice" in
        1)
            if ufw status | grep -q "Status: active"; then
                echo -e "${YELLOW}‚ö†Ô∏è  UFW —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω${NC}"
            else
                echo -e "${BLUE}üîß –í–∫–ª—é—á–∞–µ–º UFW...${NC}"
                
                # –û—Ç–∫–ª—é—á–∞–µ–º IPv6 –≤ UFW –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π
                echo -e "${BLUE}üîß –û—Ç–∫–ª—é—á–∞–µ–º IPv6 –≤ UFW...${NC}"
                sudo ufw --force disable
                
                # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º UFW –¥–ª—è —Ä–∞–±–æ—Ç—ã —Ç–æ–ª—å–∫–æ —Å IPv4
                echo 'IPV6=no' | sudo tee -a /etc/default/ufw
                
                # –í–∫–ª—é—á–∞–µ–º UFW
                sudo ufw --force enable
                
                # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã —Ç–æ–ª—å–∫–æ –¥–ª—è IPv4
                echo -e "${BLUE}üîì –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã (—Ç–æ–ª—å–∫–æ IPv4):${NC}"
                echo -e "  ‚Ä¢ SSH (22)..."
                sudo ufw allow 22/tcp
                echo -e "  ‚Ä¢ HTTPS (443)..."
                sudo ufw allow 443/tcp
                
                echo -e "${GREEN}‚úÖ UFW –≤–∫–ª—é—á–µ–Ω —Å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏ SSH –∏ HTTPS (—Ç–æ–ª—å–∫–æ IPv4)${NC}"
            fi
            ;;
        2)
            if ! ufw status | grep -q "Status: active"; then
                echo -e "${YELLOW}‚ö†Ô∏è  UFW —É–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω${NC}"
            else
                echo -e "${BLUE}üîß –í—ã–∫–ª—é—á–∞–µ–º UFW...${NC}"
                sudo ufw --force disable
                echo -e "${GREEN}‚úÖ UFW –≤—ã–∫–ª—é—á–µ–Ω${NC}"
            fi
            ;;
        3)
            echo -e "${BLUE}üìã –°—Ç–∞—Ç—É—Å UFW:${NC}"
            sudo ufw status verbose
            ;;
        4)
            open_ports_for_ip
            ;;
        5)
            delete_ports_rules
            ;;
        6)
            reset_ufw_rules
            ;;
        0)
            return 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç–æ–≤ –¥–ª—è IP
open_ports_for_ip() {
    echo -e "${WHITE}üåê –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–æ–≤ –¥–ª—è IP${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç RemnaNode –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    local node_port="6001"
    if [ -f "/opt/remnanode/.env" ]; then
        node_port=$(grep "APP_PORT=" "/opt/remnanode/.env" | cut -d'=' -f2 2>/dev/null || echo "6001")
    fi
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è:${NC}"
    echo -e "   ${WHITE}1)${NC} \033[1;32m9100\033[0m - Node Exporter (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥)"
    echo -e "   ${WHITE}2)${NC} \033[1;32m$node_port\033[0m - RemnaNode (—Ç–µ–∫—É—â–∏–π –ø–æ—Ä—Ç)"
    echo -e "   ${WHITE}3)${NC} \033[1;32m22\033[0m - SSH"
    echo -e "   ${WHITE}4)${NC} \033[1;32m443\033[0m - HTTPS"
    echo -e "   ${WHITE}5)${NC} \033[1;32m80\033[0m - HTTP"
    echo -e "   ${WHITE}6)${NC} \033[1;32m–î—Ä—É–≥–æ–π –ø–æ—Ä—Ç\033[0m - –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é"
    echo
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [1-6]: " port_choice
    
    local selected_port=""
    case "$port_choice" in
        1) selected_port="9100" ;;
        2) selected_port="$node_port" ;;
        3) selected_port="22" ;;
        4) selected_port="443" ;;
        5) selected_port="80" ;;
        6) 
            read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ—Ä—Ç–∞: " selected_port
            if ! [[ "$selected_port" =~ ^[0-9]+$ ]] || [ "$selected_port" -lt 1 ] || [ "$selected_port" -gt 65535 ]; then
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ—Ä—Ç–∞! –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 65535${NC}"
                return 1
            fi
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
            return 1
            ;;
    esac
    
    echo
    echo -e "${WHITE}–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ—Ä—Ç–∞ $selected_port:${NC}"
    echo -e "${GRAY}–ü—Ä–∏–º–µ—Ä: 192.168.1.100 –∏–ª–∏ 10.0.0.0/8${NC}"
    read -p "IP –∞–¥—Ä–µ—Å: " target_ip
    
    if [ -z "$target_ip" ]; then
        echo -e "${RED}‚ùå IP –∞–¥—Ä–µ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º${NC}"
        return 1
    fi
    
    echo
    echo -e "${BLUE}üîß –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç $selected_port –¥–ª—è $target_ip...${NC}"
    
    # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ IPv6 –æ—Ç–∫–ª—é—á–µ–Ω –≤ UFW
    if ! grep -q "IPV6=no" /etc/default/ufw; then
        echo 'IPV6=no' | sudo tee -a /etc/default/ufw
    fi
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è IPv4
    if sudo ufw allow from "$target_ip" to any port "$selected_port"; then
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $selected_port —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç –¥–ª—è $target_ip (—Ç–æ–ª—å–∫–æ IPv4)${NC}"
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ—Ä—Ç–∞ $selected_port${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –ø–æ –ø–æ—Ä—Ç–∞–º
delete_ports_rules() {
    echo -e "${WHITE}üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –ø–æ –ø–æ—Ä—Ç–∞–º${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç RemnaNode –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    local node_port="6001"
    if [ -f "/opt/remnanode/.env" ]; then
        node_port=$(grep "APP_PORT=" "/opt/remnanode/.env" | cut -d'=' -f2 2>/dev/null || echo "6001")
    fi
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª:${NC}"
    echo -e "   ${WHITE}1)${NC} \033[1;32m22\033[0m - SSH"
    echo -e "   ${WHITE}2)${NC} \033[1;32m443\033[0m - HTTPS"
    echo -e "   ${WHITE}3)${NC} \033[1;32m80\033[0m - HTTP"
    echo -e "   ${WHITE}4)${NC} \033[1;32m9100\033[0m - Node Exporter"
    echo -e "   ${WHITE}5)${NC} \033[1;32m$node_port\033[0m - RemnaNode"
    echo -e "   ${WHITE}6)${NC} \033[1;32m–î—Ä—É–≥–æ–π –ø–æ—Ä—Ç\033[0m - –≤–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é"
    echo -e "   ${WHITE}7)${NC} \033[1;32m–í—Å–µ –ø–æ—Ä—Ç—ã\033[0m - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞"
    echo
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [1-7]: " port_choice
    
    case "$port_choice" in
        1) delete_port_rule "22" ;;
        2) delete_port_rule "443" ;;
        3) delete_port_rule "80" ;;
        4) delete_port_rule "9100" ;;
        5) delete_port_rule "$node_port" ;;
        6) 
            read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ—Ä—Ç–∞: " custom_port
            if [[ "$custom_port" =~ ^[0-9]+$ ]] && [ "$custom_port" -ge 1 ] && [ "$custom_port" -le 65535 ]; then
                delete_port_rule "$custom_port"
            else
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ—Ä—Ç–∞!${NC}"
            fi
            ;;
        7)
            echo -e "${YELLOW}‚ö†Ô∏è  –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ UFW...${NC}"
            sudo ufw --force reset
            echo -e "${GREEN}‚úÖ –í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ UFW —É–¥–∞–ª–µ–Ω—ã${NC}"
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
            ;;
    esac
}

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –ø–æ—Ä—Ç–∞
delete_port_rule() {
    local port="$1"
    echo -e "${BLUE}üîß –£–¥–∞–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–æ—Ä—Ç–∞ $port...${NC}"
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–æ—Ä—Ç–∞
    local deleted=false
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ allow
    if sudo ufw delete allow "$port" 2>/dev/null; then
        echo -e "  ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ allow –¥–ª—è –ø–æ—Ä—Ç–∞ $port"
        deleted=true
    fi
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ deny
    if sudo ufw delete deny "$port" 2>/dev/null; then
        echo -e "  ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ deny –¥–ª—è –ø–æ—Ä—Ç–∞ $port"
        deleted=true
    fi
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ —Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º tcp
    if sudo ufw delete allow "$port/tcp" 2>/dev/null; then
        echo -e "  ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ allow –¥–ª—è –ø–æ—Ä—Ç–∞ $port/tcp"
        deleted=true
    fi
    
    if sudo ufw delete deny "$port/tcp" 2>/dev/null; then
        echo -e "  ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ deny –¥–ª—è –ø–æ—Ä—Ç–∞ $port/tcp"
        deleted=true
    fi
    
    if [ "$deleted" = true ]; then
        echo -e "${GREEN}‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–æ—Ä—Ç–∞ $port —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–æ—Ä—Ç–∞ $port –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª UFW
reset_ufw_rules() {
    echo -e "${WHITE}üóëÔ∏è  –°–±—Ä–æ—Å –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª UFW${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    echo -e "${YELLOW}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –ø—Ä–∞–≤–∏–ª–∞ UFW!${NC}"
    echo -e "${GRAY}–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.${NC}"
    echo
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N): " confirm
    
    if [[ "$confirm" =~ ^[Yy]$ ]]; then
        echo -e "${BLUE}üîß –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ UFW...${NC}"
        if sudo ufw --force reset; then
            echo -e "${GREEN}‚úÖ –í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ UFW —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã${NC}"
            echo -e "${GRAY}UFW —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é${NC}"
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–∞–≤–∏–ª UFW${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞${NC}"
    fi
}

# ===== –§—É–Ω–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ =====

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ hostname
configure_hostname() {
    echo -e "${WHITE}üñ•Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ hostname${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    local current_hostname=$(hostname)
    echo -e "${BLUE}–¢–µ–∫—É—â–∏–π hostname: ${YELLOW}$current_hostname${NC}"
    echo
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "   ${WHITE}1)${NC} üìù –ò–∑–º–µ–Ω–∏—Ç—å hostname"
    echo -e "   ${WHITE}2)${NC} üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π hostname"
    echo -e "   ${WHITE}0)${NC} ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥"
    echo
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [0-2]: " hostname_choice
    
    case "$hostname_choice" in
        1)
            echo
            read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π hostname: " new_hostname
            
            if [ -z "$new_hostname" ]; then
                echo -e "${RED}‚ùå Hostname –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º${NC}"
                return 1
            fi
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç hostname
            if ! [[ "$new_hostname" =~ ^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$ ]] && [ ${#new_hostname} -gt 1 ]; then
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç hostname! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã –∏ –¥–µ—Ñ–∏—Å—ã${NC}"
                return 1
            fi
            
            echo -e "${BLUE}üîß –ò–∑–º–µ–Ω—è–µ–º hostname –Ω–∞ $new_hostname...${NC}"
            
            # –ò–∑–º–µ–Ω—è–µ–º hostname
            echo "$new_hostname" | sudo tee /etc/hostname > /dev/null
            sudo hostnamectl set-hostname "$new_hostname"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º /etc/hosts
            sudo sed -i "s/127.0.1.1.*/127.0.1.1\t$new_hostname/" /etc/hosts
            
            echo -e "${GREEN}‚úÖ Hostname –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ $new_hostname${NC}"
            echo -e "${YELLOW}‚ö†Ô∏è  –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π${NC}"
            ;;
        2)
            echo -e "${BLUE}üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ hostname:${NC}"
            echo -e "  Hostname: ${YELLOW}$current_hostname${NC}"
            echo -e "  FQDN: ${YELLOW}$(hostname -f)${NC}"
            echo -e "  Domain: ${YELLOW}$(hostname -d)${NC}"
            ;;
        0)
            return 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ timezone
configure_timezone() {
    echo -e "${WHITE}üïê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ timezone${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    local current_tz=$(timedatectl show --property=Timezone --value)
    echo -e "${BLUE}–¢–µ–∫—É—â–∏–π timezone: ${YELLOW}$current_tz${NC}"
    echo
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "   ${WHITE}1)${NC} üåç –í—ã–±—Ä–∞—Ç—å timezone –∏–∑ —Å–ø–∏—Å–∫–∞"
    echo -e "   ${WHITE}2)${NC} üîç –ü–æ–∏—Å–∫ timezone"
    echo -e "   ${WHITE}3)${NC} üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π timezone"
    echo -e "   ${WHITE}0)${NC} ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥"
    echo
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [0-3]: " tz_choice
    
    case "$tz_choice" in
        1)
            echo -e "${BLUE}üåç –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ timezone:${NC}"
            echo -e "   ${WHITE}1)${NC} Europe/Moscow"
            echo -e "   ${WHITE}2)${NC} Europe/London"
            echo -e "   ${WHITE}3)${NC} America/New_York"
            echo -e "   ${WHITE}4)${NC} Asia/Tokyo"
            echo -e "   ${WHITE}5)${NC} UTC"
            echo -e "   ${WHITE}6)${NC} –î—Ä—É–≥–æ–π timezone"
            echo
            
            read -p "–í—ã–±–µ—Ä–∏—Ç–µ timezone [1-6]: " tz_select
            
            local selected_tz=""
            case "$tz_select" in
                1) selected_tz="Europe/Moscow" ;;
                2) selected_tz="Europe/London" ;;
                3) selected_tz="America/New_York" ;;
                4) selected_tz="Asia/Tokyo" ;;
                5) selected_tz="UTC" ;;
                6) 
                    read -p "–í–≤–µ–¥–∏—Ç–µ timezone (–Ω–∞–ø—Ä–∏–º–µ—Ä, Europe/Moscow): " selected_tz
                    ;;
                *)
                    echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                    return 1
                    ;;
            esac
            
            if [ -n "$selected_tz" ]; then
                echo -e "${BLUE}üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º timezone $selected_tz...${NC}"
                if sudo timedatectl set-timezone "$selected_tz"; then
                    echo -e "${GREEN}‚úÖ Timezone —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $selected_tz${NC}"
                    echo -e "${BLUE}–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${YELLOW}$(date)${NC}"
                else
                    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ timezone${NC}"
                fi
            fi
            ;;
        2)
            read -p "–í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è timezone –¥–ª—è –ø–æ–∏—Å–∫–∞: " search_term
            if [ -n "$search_term" ]; then
                echo -e "${BLUE}üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:${NC}"
                timedatectl list-timezones | grep -i "$search_term" | head -10
            fi
            ;;
        3)
            echo -e "${BLUE}üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏:${NC}"
            echo -e "  Timezone: ${YELLOW}$current_tz${NC}"
            echo -e "  –í—Ä–µ–º—è: ${YELLOW}$(date)${NC}"
            echo -e "  UTC: ${YELLOW}$(date -u)${NC}"
            ;;
        0)
            return 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS
configure_dns() {
    echo -e "${WHITE}üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    echo -e "${BLUE}–¢–µ–∫—É—â–∏–µ DNS —Å–µ—Ä–≤–µ—Ä—ã:${NC}"
    if [ -f "/etc/resolv.conf" ]; then
        grep "nameserver" /etc/resolv.conf | sed 's/^/  /'
    fi
    echo
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    echo -e "   ${WHITE}1)${NC} üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å DNS —Å–µ—Ä–≤–µ—Ä—ã"
    echo -e "   ${WHITE}2)${NC} üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ DNS"
    echo -e "   ${WHITE}3)${NC} üß™ –¢–µ—Å—Ç DNS"
    echo -e "   ${WHITE}0)${NC} ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥"
    echo
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [0-3]: " dns_choice
    
    case "$dns_choice" in
        1)
            echo -e "${BLUE}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS —Å–µ—Ä–≤–µ—Ä–æ–≤:${NC}"
            echo -e "   ${WHITE}1)${NC} Cloudflare (1.1.1.1, 1.0.0.1)"
            echo -e "   ${WHITE}2)${NC} Google (8.8.8.8, 8.8.4.4)"
            echo -e "   ${WHITE}3)${NC} Quad9 (9.9.9.9, 149.112.112.112)"
            echo -e "   ${WHITE}4)${NC} OpenDNS (208.67.222.222, 208.67.220.220)"
            echo -e "   ${WHITE}5)${NC} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ DNS"
            echo
            
            read -p "–í—ã–±–µ—Ä–∏—Ç–µ DNS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ [1-5]: " dns_provider
            
            local dns1="" dns2=""
            case "$dns_provider" in
                1) dns1="1.1.1.1"; dns2="1.0.0.1" ;;
                2) dns1="8.8.8.8"; dns2="8.8.4.4" ;;
                3) dns1="9.9.9.9"; dns2="149.112.112.112" ;;
                4) dns1="208.67.222.222"; dns2="208.67.220.220" ;;
                5) 
                    read -p "–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—ã–π DNS —Å–µ—Ä–≤–µ—Ä: " dns1
                    read -p "–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–π DNS —Å–µ—Ä–≤–µ—Ä: " dns2
                    ;;
                *)
                    echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                    return 1
                    ;;
            esac
            
            if [ -n "$dns1" ] && [ -n "$dns2" ]; then
                echo -e "${BLUE}üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º DNS —Å–µ—Ä–≤–µ—Ä—ã...${NC}"
                
                # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
                sudo cp /etc/resolv.conf /etc/resolv.conf.backup
                
                # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º DNS
                cat > /tmp/resolv.conf << EOF
# DNS —Å–µ—Ä–≤–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —á–µ—Ä–µ–∑ node-config.sh
nameserver $dns1
nameserver $dns2
options edns0
EOF
                
                sudo mv /tmp/resolv.conf /etc/resolv.conf
                sudo chmod 644 /etc/resolv.conf
                
                echo -e "${GREEN}‚úÖ DNS —Å–µ—Ä–≤–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã:${NC}"
                echo -e "  Primary: ${YELLOW}$dns1${NC}"
                echo -e "  Secondary: ${YELLOW}$dns2${NC}"
            fi
            ;;
        2)
            echo -e "${BLUE}üìã –¢–µ–∫—É—â–∏–µ DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:${NC}"
            if [ -f "/etc/resolv.conf" ]; then
                cat /etc/resolv.conf
            else
                echo -e "${RED}‚ùå –§–∞–π–ª /etc/resolv.conf –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
            fi
            ;;
        3)
            echo -e "${BLUE}üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º DNS...${NC}"
            echo -e "–¢–µ—Å—Ç Google DNS:"
            nslookup google.com 8.8.8.8
            echo
            echo -e "–¢–µ—Å—Ç Cloudflare DNS:"
            nslookup google.com 1.1.1.1
            ;;
        0)
            return 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
            ;;
    esac
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ TCP –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
configure_tcp_params() {
    echo -e "${WHITE}üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ TCP –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤${NC}"
    echo -e "${GRAY}$(printf '‚îÄ%.0s' $(seq 1 40))${NC}"
    
    echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:${NC}"
    echo -e "   ${WHITE}1)${NC} üè† –î–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä (–±–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)"
    echo -e "   ${WHITE}2)${NC} üè¢ –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (—Å—Ä–µ–¥–Ω—è—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)"
    echo -e "   ${WHITE}3)${NC} üöÄ –í—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)"
    echo -e "   ${WHITE}4)${NC} üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã"
    echo -e "   ${WHITE}5)${NC} üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    echo -e "   ${WHITE}0)${NC} ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥"
    echo
    
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [0-5]: " tcp_choice
    
    case "$tcp_choice" in
        1|2|3)
            local profile_name=""
            case "$tcp_choice" in
                1) profile_name="–¥–æ–º–∞—à–Ω–∏–π —Å–µ—Ä–≤–µ—Ä" ;;
                2) profile_name="–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä" ;;
                3) profile_name="–≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä" ;;
            esac
            
            echo -e "${BLUE}üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è $profile_name...${NC}"
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é TCP
            cat > /tmp/99-tcp-optimization.conf << EOF
# TCP –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è $profile_name
# –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ —á–µ—Ä–µ–∑ node-config.sh

# –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
net.core.rmem_default = 262144
net.core.rmem_max = 16777216
net.core.wmem_default = 262144
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 5000
net.core.somaxconn = 65535

# TCP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
net.ipv4.tcp_rmem = 4096 65536 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_fin_timeout = 15
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.tcp_keepalive_intvl = 30
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 2000000
net.ipv4.tcp_fastopen = 3
EOF
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
            if [ "$tcp_choice" = "3" ]; then
                cat >> /tmp/99-tcp-optimization.conf << EOF

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤
net.core.netdev_budget = 600
net.ipv4.tcp_workaround_signed_windows = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.tcp_moderate_rcvbuf = 1
EOF
            fi
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            sudo mv /tmp/99-tcp-optimization.conf /etc/sysctl.d/99-tcp-optimization.conf
            sudo chmod 644 /etc/sysctl.d/99-tcp-optimization.conf
            sudo sysctl -p /etc/sysctl.d/99-tcp-optimization.conf
            
            echo -e "${GREEN}‚úÖ TCP –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è $profile_name${NC}"
            echo -e "${YELLOW}‚ö†Ô∏è  –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π${NC}"
            ;;
        4)
            echo -e "${BLUE}üìã –¢–µ–∫—É—â–∏–µ TCP –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:${NC}"
            echo -e "Congestion Control: ${YELLOW}$(sysctl net.ipv4.tcp_congestion_control | cut -d'=' -f2)${NC}"
            echo -e "Max Connections: ${YELLOW}$(sysctl net.core.somaxconn | cut -d'=' -f2)${NC}"
            echo -e "TCP Window Scaling: ${YELLOW}$(sysctl net.ipv4.tcp_window_scaling | cut -d'=' -f2)${NC}"
            echo -e "TCP SACK: ${YELLOW}$(sysctl net.ipv4.tcp_sack | cut -d'=' -f2)${NC}"
            ;;
        5)
            echo -e "${BLUE}üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º TCP –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é...${NC}"
            sudo rm -f /etc/sysctl.d/99-tcp-optimization.conf
            sudo sysctl --system
            echo -e "${GREEN}‚úÖ TCP –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã${NC}"
            ;;
        0)
            return 0
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
            ;;
    esac
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        show_status_header
        
        echo -e "${WHITE}üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:${NC}"
        echo
        echo -e "${WHITE}üî• UFW:${NC}"
        echo -e "   ${WHITE}1)${NC} üî• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ UFW"
        echo
        echo -e "${WHITE}üåê IPv6:${NC}"
        echo -e "   ${WHITE}2)${NC} ‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å IPv6"
        echo -e "   ${WHITE}3)${NC} ‚úÖ –í–∫–ª—é—á–∏—Ç—å IPv6"
        echo
        echo -e "${WHITE}‚öôÔ∏è  –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:${NC}"
        echo -e "   ${WHITE}4)${NC} üñ•Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ hostname"
        echo -e "   ${WHITE}5)${NC} üïê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ timezone"
        echo -e "   ${WHITE}6)${NC} üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ DNS"
        echo -e "   ${WHITE}7)${NC} üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ TCP –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
        echo
        echo -e "   ${GRAY}0)${NC} ‚¨ÖÔ∏è  –í—ã—Ö–æ–¥"
        echo
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [0-7]: " choice
        
        case "$choice" in
            1)
                manage_ufw
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            2)
                disable_ipv6
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            3)
                enable_ipv6
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            4)
                configure_hostname
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            5)
                configure_timezone
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            6)
                configure_dns
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            7)
                configure_tcp_params
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            0)
                echo -e "${GREEN}üëã –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 0 –¥–æ 7.${NC}"
                sleep 2
                ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main_menu
