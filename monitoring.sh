#!/bin/bash

# Simple Monitoring menu: Prometheus + Grafana (no Docker)

set -euo pipefail

# Colors
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
BLUE='\033[1;34m'
CYAN='\033[1;36m'
WHITE='\033[1;37m'
NC='\033[0m'

require_root() {
  if [ "$(id -u)" != "0" ]; then
    echo -e "${RED}–≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç root (sudo).${NC}"
    exit 1
  fi
}

ensure_tools() {
  for pkg in curl wget tar; do
    if ! command -v "$pkg" >/dev/null 2>&1; then
      apt-get update -y >/dev/null 2>&1 || true
      apt-get install -y "$pkg" >/dev/null 2>&1 || true
    fi
  done
}

install_prometheus() {
  echo -e "${CYAN}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Prometheus...${NC}"
  useradd --no-create-home --system --shell /usr/sbin/nologin prometheus 2>/dev/null || true

  mkdir -p /etc/prometheus /var/lib/prometheus /opt/prometheus

  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é
  local ver
  ver=$(curl -s https://api.github.com/repos/prometheus/prometheus/releases/latest | grep -oP '"tag_name":\s*"\K[^"]+' || echo "v2.52.0")
  local tarname="prometheus-${ver#v}.linux-amd64.tar.gz"
  local url="https://github.com/prometheus/prometheus/releases/download/${ver}/${tarname}"

  curl -fsSL "$url" -o "/tmp/$tarname"
  tar -xzf "/tmp/$tarname" -C /tmp
  local extracted="/tmp/prometheus-${ver#v}.linux-amd64"

  # –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ –ø–µ—Ä–µ–¥ –∑–∞–º–µ–Ω–æ–π –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤
  if systemctl list-unit-files 2>/dev/null | grep -q '^prometheus\.service'; then
    systemctl stop prometheus 2>/dev/null || true
    # –ñ–¥—ë–º, –ø–æ–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø—É—Å—Ç–∏—Ç –±–∏–Ω–∞—Ä–Ω–∏–∫
    for i in $(seq 1 10); do
      if pgrep -f "/usr/local/bin/prometheus" >/dev/null 2>&1; then
        sleep 1
      else
        break
      fi
    done
  fi

  # –ö–æ–ø–∏—Ä—É–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –∞—Ç–æ–º–∞—Ä–Ω–æ
  install -m 0755 "$extracted/prometheus" /usr/local/bin/prometheus.new
  install -m 0755 "$extracted/promtool"   /usr/local/bin/promtool.new
  mv -f /usr/local/bin/prometheus.new /usr/local/bin/prometheus
  mv -f /usr/local/bin/promtool.new   /usr/local/bin/promtool

  # –ö–æ–Ω—Å–æ–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –Ω–æ–≤—ã—Ö —Ä–µ–ª–∏–∑–∞—Ö: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ñ–ª–∞–≥–∏
  rm -rf /opt/prometheus/console_libraries /opt/prometheus/consoles || true
  local flags=""
  rm -rf "$extracted" "/tmp/$tarname"

  chown -R prometheus:prometheus /etc/prometheus /var/lib/prometheus /opt/prometheus
  chown root:root /usr/local/bin/prometheus /usr/local/bin/promtool

  if [ ! -f /etc/prometheus/prometheus.yml ]; then
    cat > /etc/prometheus/prometheus.yml <<'YAML'
global:
  scrape_interval: 15s

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
  - job_name: 'node_exporter'
    static_configs:
      - targets: ['localhost:9100']
YAML
    chown prometheus:prometheus /etc/prometheus/prometheus.yml
  fi

  cat > /etc/systemd/system/prometheus.service <<UNIT
[Unit]
Description=Prometheus Monitoring
After=network-online.target
Wants=network-online.target

[Service]
User=prometheus
Group=prometheus
Type=simple
ExecStart=/usr/local/bin/prometheus \
  --config.file=/etc/prometheus/prometheus.yml \
  --storage.tsdb.path=/var/lib/prometheus
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
UNIT

  systemctl daemon-reload
  systemctl enable --now prometheus
  echo -e "${GREEN}‚úÖ Prometheus —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (http://<IP>:9090)${NC}"
}

install_grafana() {
  echo -e "${CYAN}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Grafana...${NC}"
  useradd --no-create-home --system --shell /usr/sbin/nologin grafana 2>/dev/null || true

  mkdir -p /opt/grafana /etc/grafana /var/lib/grafana /var/log/grafana /etc/grafana/provisioning/datasources

  # –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–ª–∏–∑ OSS
  local ver tgz url
  ver=$(curl -s https://api.github.com/repos/grafana/grafana/releases/latest | grep -oP '"tag_name":\s*"\K[^"]+' || echo "v11.0.0")
  tgz="grafana-${ver#v}.linux-amd64.tar.gz"
  url="https://dl.grafana.com/oss/release/${tgz}"
  curl -fsSL "$url" -o "/tmp/$tgz"
  tar -xzf "/tmp/$tgz" -C /opt/grafana --strip-components=1
  rm -f "/tmp/$tgz"

  # Datasource Prometheus
  cat > /etc/grafana/provisioning/datasources/datasource.yml <<'YAML'
apiVersion: 1
datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://localhost:9090
    isDefault: true
YAML

  # –ö–æ–Ω—Ñ–∏–≥ Grafana (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π)
  cat > /etc/grafana/grafana.ini <<'INI'
[server]
http_addr =
http_port = 3000

[paths]
data = /var/lib/grafana
logs = /var/log/grafana
plugins = /var/lib/grafana/plugins
provisioning = /etc/grafana/provisioning

[security]
admin_user = admin
admin_password = admin
INI

  chown -R grafana:grafana /etc/grafana /var/lib/grafana /var/log/grafana /opt/grafana

  cat > /etc/systemd/system/grafana.service <<'UNIT'
[Unit]
Description=Grafana Server
After=network-online.target
Wants=network-online.target

[Service]
User=grafana
Group=grafana
Type=simple
WorkingDirectory=/opt/grafana
ExecStart=/opt/grafana/bin/grafana-server --config=/etc/grafana/grafana.ini --homepath=/opt/grafana
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
UNIT

  systemctl daemon-reload
  systemctl enable --now grafana
  echo -e "${GREEN}‚úÖ Grafana —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (http://<IP>:3000, admin/admin)${NC}"
}

install_stack() {
  require_root
  ensure_tools
  install_prometheus
  install_grafana
  echo -e "${GREEN}üéâ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
  read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
}

remove_stack() {
  require_root
  echo -e "${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ Prometheus –∏ Grafana...${NC}"
  systemctl disable --now prometheus 2>/dev/null || true
  systemctl disable --now grafana 2>/dev/null || true
  rm -f /etc/systemd/system/prometheus.service /etc/systemd/system/grafana.service
  systemctl daemon-reload

  userdel prometheus 2>/dev/null || true
  userdel grafana 2>/dev/null || true

  rm -rf /etc/prometheus /var/lib/prometheus /opt/prometheus
  rm -rf /etc/grafana /var/lib/grafana /var/log/grafana /opt/grafana
  echo -e "${GREEN}‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ${NC}"
  read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
}

install_node_exporter_menu() {
  require_root
  # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç, –∏–Ω–∞—á–µ —Å–∫–∞—á–∏–≤–∞–µ–º –∏–∑ GitHub
  if [ -f "./install_node_exporter.sh" ]; then
    bash "./install_node_exporter.sh"
  else
    bash <(curl -fsSL https://raw.githubusercontent.com/Spakieone/Remna/main/install_node_exporter.sh)
  fi
}

show_menu() {
  while true; do
    clear
    echo -e "${WHITE}üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (Prometheus + Grafana)${NC}"
    echo
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Node Exporter
    if systemctl is-active --quiet node_exporter 2>/dev/null; then
      echo -e "${GREEN}  [‚úì] Node Exporter: RUNNING${NC}"
    else
      echo -e "${RED}  [‚úó] Node Exporter: NOT RUNNING${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Prometheus
    if systemctl is-active --quiet prometheus 2>/dev/null; then
      echo -e "${GREEN}  [‚úì] Prometheus: RUNNING${NC}"
    else
      echo -e "${RED}  [‚úó] Prometheus: NOT RUNNING${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Grafana
    if systemctl is-active --quiet grafana 2>/dev/null; then
      echo -e "${GREEN}  [‚úì] Grafana: RUNNING${NC}"
    else
      echo -e "${RED}  [‚úó] Grafana: NOT RUNNING${NC}"
    fi
    
    echo
    echo -e "${CYAN}1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Prometheus + Grafana${NC}"
    echo -e "${CYAN}2) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–ø—Ä–æ–≤–µ—Ä–∏—Ç—å Node Exporter${NC}"
    echo -e "${CYAN}3) –£–¥–∞–ª–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥${NC}"
    echo -e "${CYAN}0) –ù–∞–∑–∞–¥${NC}"
    echo
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ [0-3]: " ans
    case "$ans" in
      1) install_stack ;;
      2) install_node_exporter_menu ;;
      3) remove_stack ;;
      0) exit 0 ;;
      *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}"; sleep 1 ;;
    esac
  done
}

show_menu


