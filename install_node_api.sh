#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node API
# Node API Installation Script

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
GRAY='\033[0;37m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
NODE_API_DIR="/home/node-manager/node-api"
NODE_API_SCRIPT="$NODE_API_DIR/node_api.py"
SYSTEMD_SERVICE_FILE="/etc/systemd/system/node-api.service"
NODE_MANAGER_USER="node-manager"
NODE_API_TOKEN="" # –ë—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω –≤–æ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
show_header() {
    clear
    echo -e "${BOLD}${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}                                                              ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó${NC}               ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë${NC}               ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë${NC}               ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïë${NC}               ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë${NC}               ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}  ${WHITE}‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù${NC}               ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}                                                              ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}       ${GRAY}Node API Installation Script${NC}                        ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïë${NC}                                                              ${BOLD}${CYAN}‚ïë${NC}"
    echo -e "${BOLD}${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Ç–æ–∫–µ–Ω–∞
get_node_api_token() {
    echo ""
    echo -e "${BOLD}${WHITE}‚îå‚îÄ üîë –ù–ê–°–¢–†–û–ô–ö–ê –¢–û–ö–ï–ù–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}                                                      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${YELLOW}–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–ª—è Node API:${NC}                              ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}                                                      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${GRAY}–≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏${NC}        ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${GRAY}–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Node API –Ω–∞ —ç—Ç–æ–π –Ω–æ–¥–µ.${NC}                        ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}                                                      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${CYAN}–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:${NC}                                          ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${CYAN}‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–∂–Ω—ã–π —Ç–æ–∫–µ–Ω (–º–∏–Ω–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤)${NC}      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${CYAN}‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ç–æ–∫–µ–Ω –Ω–∞ –≤—Å–µ—Ö –Ω–æ–¥–∞—Ö${NC}           ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${CYAN}‚Ä¢ –ü—Ä–∏–º–µ—Ä: monitoring-bot-2024-secure-token-xyz789${NC}      ${BOLD}${WHITE}‚îÇ${NC}"
    echo -e "${BOLD}${WHITE}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo ""
    
    while true; do
        echo -n -e "${WHITE}–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω: ${NC}"
        read token
        
        if [ -z "$token" ]; then
            echo -e "${RED}‚ùå –¢–æ–∫–µ–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!${NC}"
            continue
        fi
        
        if [ ${#token} -lt 10 ]; then
            echo -e "${RED}‚ùå –¢–æ–∫–µ–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π! –ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤.${NC}"
            continue
        fi
        
        echo ""
        echo -n -e "${WHITE}–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω: ${NC}"
        read confirm_token
        
        if [ "$token" != "$confirm_token" ]; then
            echo -e "${RED}‚ùå –¢–æ–∫–µ–Ω—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
            continue
        fi
        
        NODE_API_TOKEN="$token"
        echo -e "${GREEN}‚úÖ –¢–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
        break
    done
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node API
install_node_api() {
    log "üöÄ –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node API..."
    
    # 0. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    get_node_api_token

    # 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è node-manager, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if ! id -u "$NODE_MANAGER_USER" >/dev/null 2>&1; then
        log "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $NODE_MANAGER_USER..."
        useradd -m -s /bin/bash "$NODE_MANAGER_USER"
        echo "$NODE_MANAGER_USER ALL=(ALL) NOPASSWD: /bin/systemctl start *, /bin/systemctl stop *, /bin/systemctl restart *, /bin/systemctl status *, /sbin/reboot" | tee "/etc/sudoers.d/$NODE_MANAGER_USER" > /dev/null
        chmod 0440 "/etc/sudoers.d/$NODE_MANAGER_USER"
    else
        log "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $NODE_MANAGER_USER —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
    fi

    # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python3 –∏ pip
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python3 –∏ pip..."
    apt update
    apt install -y python3 python3-pip python3-venv curl wget
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ pip3 —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
    if ! command -v pip3 &> /dev/null; then
        error "pip3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: apt install python3-pip"
        return 1
    fi

    # 3. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è Node API
    log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $NODE_API_DIR..."
    mkdir -p "$NODE_API_DIR"
    chown "$NODE_MANAGER_USER":"$NODE_MANAGER_USER" "$NODE_API_DIR"

    # 4. –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç Node API
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ node_api.py..."
    cat > "$NODE_API_SCRIPT" << 'EOF'
#!/usr/bin/env python3
from flask import Flask, request, jsonify
import subprocess
import os
import psutil

app = Flask(__name__)

# –¢–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
AUTH_TOKEN = os.getenv("NODE_API_TOKEN", "your-secret-token")

def check_auth():
    token = request.headers.get('Authorization')
    if not token or token != f"Bearer {AUTH_TOKEN}":
        return False
    return True

@app.route('/health', methods=['GET'])
def health_check():
    return jsonify({"status": "ok"}), 200

@app.route('/api/status', methods=['GET'])
def get_status():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        cpu_percent = psutil.cpu_percent(interval=0.1)
        ram_info = psutil.virtual_memory()
        disk_info = psutil.disk_usage('/')

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
        services_status = {}
        configured_services = os.getenv("NODE_SERVICES", "nginx,node_exporter,vpn_service").split(',')
        for service in configured_services:
            result = subprocess.run(
                ['systemctl', 'is-active', service.strip()],
                capture_output=True, text=True
            )
            services_status[service.strip()] = result.stdout.strip()

        return jsonify({
            "status": "online",
            "cpu": f"{cpu_percent:.1f}%",
            "memory": f"{ram_info.percent:.1f}%",
            "uptime": subprocess.check_output(['uptime', '-p']).decode().strip(),
            "disk": f"{disk_info.percent:.1f}%",
            "services": services_status
        })
    except Exception as e:
        return jsonify({"error": str(e)}), 500

@app.route('/api/service/<service>/<action>', methods=['POST'])
def control_service(service, action):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏"""
    if action not in ['start', 'stop', 'restart', 'status']:
        return jsonify({"error": "Invalid action"}), 400

    try:
        result = subprocess.run(
            ['sudo', 'systemctl', action, service],
            capture_output=True, text=True, timeout=30
        )

        return jsonify({
            "service": service,
            "action": action,
            "success": result.returncode == 0,
            "output": result.stdout,
            "error": result.stderr
        })
    except Exception as e:
        return jsonify({"error": str(e)}), 500

@app.route('/api/reboot', methods=['POST'])
def reboot_node():
    """–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–¥—ã"""
    try:
        subprocess.run(['sudo', 'reboot'], check=False)
        return jsonify({"message": "Reboot initiated"})
    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080, debug=False)
EOF
    chmod +x "$NODE_API_SCRIPT"
    chown "$NODE_MANAGER_USER":"$NODE_MANAGER_USER" "$NODE_API_SCRIPT"

    # 5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ (–ø—Ä–æ—â–µ –∏ –Ω–∞–¥–µ–∂–Ω–µ–µ)
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Flask –∏ psutil –≥–ª–æ–±–∞–ª—å–Ω–æ
    pip3 install flask psutil
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
    if [ $? -ne 0 ]; then
        error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: pip3 install flask psutil"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    pip3 list | grep -E "(flask|psutil)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Python –º–æ–∂–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª–∏
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π..."
    python3 -c "import flask; import psutil; print('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')"
    
    if [ $? -ne 0 ]; then
        error "–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É: pip3 list"
        return 1
    fi

    # 6. –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
    log "–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    cat > "$SYSTEMD_SERVICE_FILE" << EOF
[Unit]
Description=Node API Server
After=network.target

[Service]
Type=simple
User=root
Group=root
WorkingDirectory=$NODE_API_DIR
Environment="NODE_API_TOKEN=$NODE_API_TOKEN"
Environment="NODE_SERVICES=nginx,node_exporter,vpn_service"
ExecStart=/usr/bin/python3 $NODE_API_SCRIPT
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
EOF

    # 7. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Node API..."
    systemctl daemon-reload
    systemctl enable node-api
    systemctl start node-api

    # 8. –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç –≤ —Ñ–∞–π—Ä–≤–æ–ª–µ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è UFW)
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ (UFW)..."
    if command -v ufw &> /dev/null; then
        ufw allow 8080/tcp
        ufw reload
        log "–ü–æ—Ä—Ç 8080 –æ—Ç–∫—Ä—ã—Ç –≤ UFW."
    else
        warn "UFW –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–∞."
    fi

    # 9. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    log "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –±–æ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    echo "NODE_API_TOKEN=$NODE_API_TOKEN" > /tmp/node_api_token.txt
    chmod 600 /tmp/node_api_token.txt

    log "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node API –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    info "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
    echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞: sudo systemctl status node-api"
    echo "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ API: curl http://localhost:8080/health"
    echo "   ‚Ä¢ –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞: sudo journalctl -u node-api -f"
    echo ""
    echo -e "${BOLD}${YELLOW}üîë –í–ê–ñ–ù–û: –¢–æ–∫–µ–Ω –¥–ª—è –±–æ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:${NC}"
    echo -e "${BOLD}${CYAN}NODE_API_TOKEN=$NODE_API_TOKEN${NC}"
    echo ""
    echo -e "${BOLD}${WHITE}üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ .env —Ñ–∞–π–ª –±–æ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞!${NC}"
    echo ""
}


# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Node API (–ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
fix_node_api() {
    log "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Node API..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
    check_root
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ pip3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if ! command -v pip3 &> /dev/null; then
        log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ pip3..."
        apt update
        apt install -y python3-pip
    fi
    
    # –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    log "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    pip3 install --force-reinstall flask psutil
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    pip3 list | grep -E "(flask|psutil)"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π..."
    python3 -c "import flask; import psutil; print('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')"
    
    if [ $? -ne 0 ]; then
        error "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π!"
        return 1
    fi
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Node API..."
    systemctl restart node-api
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 2
    if systemctl is-active --quiet node-api; then
        log "‚úÖ Node API –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    else
        error "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Node API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo journalctl -u node-api -f"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    show_header
    echo -e "${BOLD}${WHITE}üìä –°—Ç–∞—Ç—É—Å Node API${NC}"
    echo -e "${GRAY}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    echo -e "${WHITE}üîß –°–µ—Ä–≤–∏—Å Node API:${NC}"
    if systemctl is-active --quiet node-api; then
        echo -e "   ${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å: –ó–∞–ø—É—â–µ–Ω${NC}"
    else
        echo -e "   ${RED}‚ùå –°—Ç–∞—Ç—É—Å: –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
    echo -e "${WHITE}üåê –ü–æ—Ä—Ç 8080:${NC}"
    if netstat -tlnp 2>/dev/null | grep -q ":8080 "; then
        echo -e "   ${GREEN}‚úÖ –ü–æ—Ä—Ç –æ—Ç–∫—Ä—ã—Ç${NC}"
    else
        echo -e "   ${RED}‚ùå –ü–æ—Ä—Ç –∑–∞–∫—Ä—ã—Ç${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API
    echo -e "${WHITE}üîç API Health Check:${NC}"
    if curl -s http://localhost:8080/health >/dev/null 2>&1; then
        echo -e "   ${GREEN}‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
    else
        echo -e "   ${RED}‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
    fi
    
    echo ""
    echo -e "${GRAY}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_menu() {
    while true; do
        show_header
        echo -e "${BOLD}${WHITE}‚îå‚îÄ üîß NODE API –£–ü–†–ê–í–õ–ï–ù–ò–ï ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}                                                      ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}1.${NC} ${YELLOW}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node API${NC}           ${GRAY}‚îÉ${NC} ${WHITE}–ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞${NC}        ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}2.${NC} ${YELLOW}üîß –ò—Å–ø—Ä–∞–≤–∏—Ç—å Node API${NC}           ${GRAY}‚îÉ${NC} ${WHITE}–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π${NC} ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}3.${NC} ${YELLOW}üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å${NC}              ${GRAY}‚îÉ${NC} ${WHITE}–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞${NC}          ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}4.${NC} ${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å${NC}           ${GRAY}‚îÉ${NC} ${WHITE}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫${NC}             ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}5.${NC} ${YELLOW}üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏${NC}                 ${GRAY}‚îÉ${NC} ${WHITE}–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞${NC}           ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}6.${NC} ${YELLOW}üîß –¢–µ—Å—Ç API${NC}                      ${GRAY}‚îÉ${NC} ${WHITE}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ${NC}           ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}                                                      ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
        echo ""
        echo -e "${BOLD}${WHITE}‚îå‚îÄüö™–í–´–•–û–î ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
        echo -e "${BOLD}${WHITE}‚îÇ${NC}  ${BOLD}${GREEN}0.${NC} ${WHITE}–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é${NC}                        ${BOLD}${WHITE}‚îÇ${NC}"
        echo -e "${BOLD}${WHITE}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
        echo ""
        echo -e "${WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC} "
        echo -n "   ‚û§ "
        
        read -r choice
        
        case $choice in
            1) 
                check_root
                install_node_api
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            2) 
                fix_node_api
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            3) 
                check_status
                ;;
            4) 
                echo -e "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Node API...${NC}"
                systemctl restart node-api
                echo -e "${GREEN}‚úÖ Node API –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            5) 
                echo -e "${CYAN}üìã –õ–æ–≥–∏ Node API:${NC}"
                journalctl -u node-api -f --no-pager
                ;;
            6) 
                echo -e "${YELLOW}üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...${NC}"
                echo ""
                echo -e "${WHITE}Health Check:${NC}"
                curl -s http://localhost:8080/health | jq . 2>/dev/null || curl -s http://localhost:8080/health
                echo ""
                echo -e "${WHITE}Status API:${NC}"
                curl -s http://localhost:8080/api/status | jq . 2>/dev/null || curl -s http://localhost:8080/api/status
                echo ""
                read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
                ;;
            0) 
                return
                ;;
            *) 
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –æ—Ç 0 –¥–æ 5.${NC}"
                sleep 2
                ;;
        esac
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
if [ "$1" = "menu" ]; then
    show_menu
else
    check_root
    install_node_api
fi
